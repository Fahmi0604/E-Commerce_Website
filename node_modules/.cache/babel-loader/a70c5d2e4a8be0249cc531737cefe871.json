{"ast":null,"code":"var _jsxFileName = \"/Users/fahmifirmansyah/Documents/Semester 6/Pemrograman_Berbasis_Framework/UAS/televisi-app/src/component/televisi/Televisi.jsx\";\nimport React, { Component } from 'react';\nimport firebase from 'firebase';\nimport firebaseConfig from '../../config';\nimport Post from './Post';\n\nclass Televisi extends Component {\n  constructor(props) {\n    super(props);\n\n    this.ambilDataDariServerAPI = () => {\n      const userRef = firebase.database().ref('televisi');\n      userRef.on('value', snapshot => {\n        let newUserState = [];\n        snapshot.forEach(data => {\n          const dataVal = data.val();\n          newUserState.push({\n            id: data.key,\n            nama: dataVal.nama,\n            harga: dataVal.harga,\n            gambar: dataVal.gambar,\n            stok: dataVal.stok\n          });\n        });\n        this.setState({\n          listTelevisi: newUserState\n        });\n        console.log(this.state);\n      });\n    };\n\n    this.getDatabyId = userId => {\n      const Ref = firebase.database().ref('televisi/' + userId); // let idP, namaP, hargaP, gambarP, stokP;\n\n      let data2;\n      Ref.on('value', snapshot => {\n        const data = snapshot.val();\n        data2 = data;\n        this.writeData(data.id, data.nama, data.harga, data.gambar, data.stok); // idP=data.id\n        // namaP=data.nama\n        // hargaP=data.harga\n        // gambarP=data.gambar\n        // stokP=data.stok\n\n        console.log(data);\n      }); // Ref.set({\n      //   ...data2,\n      //   stok: data2.stok -1\n      // })\n    };\n\n    this.writeData = (userId, name, price, imageUrl, stock) => {\n      var counter = 0; // var counter2;\n\n      let uid = this.state.user.uid;\n      const userRef = firebase.database().ref('keranjang/' + uid + \"/\" + userId);\n      userRef.on('value', function (snapshot) {\n        if (snapshot.exists()) {\n          const data = snapshot.val();\n          counter = data.qty;\n          console.log(\"qty:\" + counter); // alert(counter);\n        }\n      }); // counter2 = counter + 1;\n\n      firebase.database().ref('keranjang/' + uid + \"/\" + userId).set({\n        id: userId,\n        nama: name,\n        harga: price,\n        gambar: imageUrl,\n        stok: stock,\n        qty: counter + 1\n      });\n    };\n\n    if (!firebase.apps.length) {\n      firebase.initializeApp(firebaseConfig);\n    } else {\n      firebase.app(); // if already initialized, use that one\n    }\n\n    this.state = {\n      listTelevisi: [],\n      user: {}\n    };\n  }\n\n  authListener() {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.setState({\n          user\n        });\n        console.log(\"User adalah : \" + user.email);\n      } else {\n        this.setState({\n          user: null\n        });\n      }\n    });\n  }\n\n  componentDidMount() {\n    this.ambilDataDariServerAPI();\n    this.authListener();\n    console.log(this.state);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log(this.state);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"post-televisi\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"center\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 19\n      }\n    }, \"Daftar Barang\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tgh\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }\n    }, this.state.listTelevisi.map(televisi => {\n      // let uid = televisi.id;\n      return /*#__PURE__*/React.createElement(Post, {\n        key: televisi.id,\n        id: televisi.id,\n        nama: televisi.nama,\n        harga: televisi.harga,\n        gambar: televisi.gambar,\n        stok: televisi.stok // tambahTelevisi={this.handleGetTelevisi} />\n        ,\n        tambahTelevisi: this.getDatabyId,\n        users: this.state.user ? this.state.user.email : null,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 19\n        }\n      });\n    })));\n  }\n\n}\n\nexport default Televisi;","map":{"version":3,"sources":["/Users/fahmifirmansyah/Documents/Semester 6/Pemrograman_Berbasis_Framework/UAS/televisi-app/src/component/televisi/Televisi.jsx"],"names":["React","Component","firebase","firebaseConfig","Post","Televisi","constructor","props","ambilDataDariServerAPI","userRef","database","ref","on","snapshot","newUserState","forEach","data","dataVal","val","push","id","key","nama","harga","gambar","stok","setState","listTelevisi","console","log","state","getDatabyId","userId","Ref","data2","writeData","name","price","imageUrl","stock","counter","uid","user","exists","qty","set","apps","length","initializeApp","app","authListener","auth","onAuthStateChanged","email","componentDidMount","componentDidUpdate","prevProps","prevState","render","map","televisi"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport firebase from 'firebase'\nimport firebaseConfig from '../../config'\nimport Post from './Post'\n\nclass Televisi extends Component {\n\n    constructor(props) {\n      super(props);\n  \n      if (!firebase.apps.length) {\n        firebase.initializeApp(firebaseConfig);\n      } else {\n        firebase.app(); // if already initialized, use that one\n      }\n  \n      this.state = {\n        listTelevisi: [],\n        user: {},\n      }\n  \n    }\n  \n    authListener() {\n      firebase.auth().onAuthStateChanged((user) => {\n        if (user) {\n          this.setState({\n            user\n          })\n          console.log(\"User adalah : \" + user.email)\n        }\n        else {\n          this.setState({\n            user: null\n          })\n        }\n      })\n    }\n  \n    ambilDataDariServerAPI = () => {\n      const userRef = firebase.database().ref('televisi');\n      userRef.on('value', (snapshot) => {\n        let newUserState = [];\n        snapshot.forEach(data => {\n          const dataVal = data.val()\n          newUserState.push({\n            id: data.key,\n            nama: dataVal.nama,\n            harga: dataVal.harga,\n            gambar: dataVal.gambar,\n            stok: dataVal.stok\n          })\n        })\n        this.setState({\n          listTelevisi: newUserState\n        })\n        console.log(this.state);\n      })\n    }\n  \n    componentDidMount() {\n      this.ambilDataDariServerAPI();\n      this.authListener();\n      console.log(this.state)\n    }\n  \n    componentDidUpdate(prevProps, prevState) {\n      console.log(this.state);\n    }\n  \n    getDatabyId = userId => {\n      const Ref = firebase.database().ref('televisi/' + userId);\n\n      // let idP, namaP, hargaP, gambarP, stokP;\n      let data2;\n\n      Ref.on('value', (snapshot) => {\n        const data = snapshot.val();\n        data2 = data;\n        this.writeData(data.id, data.nama, data.harga, data.gambar, data.stok);\n        // idP=data.id\n        // namaP=data.nama\n        // hargaP=data.harga\n        // gambarP=data.gambar\n        // stokP=data.stok\n        console.log(data);\n      })\n\n      // Ref.set({\n      //   ...data2,\n      //   stok: data2.stok -1\n      // })\n    }\n  \n    writeData = (userId, name, price, imageUrl, stock) => {\n  \n      var counter=0;\n      // var counter2;\n      let uid = this.state.user.uid;\n  \n      const userRef = firebase.database().ref('keranjang/'+uid+\"/\"+userId);\n      userRef.on('value', function(snapshot) {\n          if (snapshot.exists()) {\n              const data = snapshot.val();\n              counter = data.qty;\n              console.log(\"qty:\"+counter);\n              // alert(counter);\n          }\n      })\n      // counter2 = counter + 1;\n\n      firebase.database().ref('keranjang/' + uid +\"/\"+ userId).set({\n        id: userId,\n        nama: name,\n        harga: price,\n        gambar: imageUrl,\n        stok: stock,\n        qty: counter + 1\n      });\n    }\n  \n    render() {\n      return (\n        <div className=\"post-televisi\">\n          {\n                  /* <div className=\"form pb-2 border-bottom\">\n                      <button type=\"submit\" className=\"btn btn-primary\" onClick={this.handleTombolSimpan}>Simpan</button>\n                  </div> */}\n          <center><h2>Daftar Barang</h2></center>\n          <div className=\"tgh\">\n            {\n              this.state.listTelevisi.map(televisi => {\n                // let uid = televisi.id;\n                return (\n                  <Post\n                    key={televisi.id}\n                    id={televisi.id}\n                    nama={televisi.nama}\n                    harga={televisi.harga}\n                    gambar={televisi.gambar}\n                    stok={televisi.stok}\n                    // tambahTelevisi={this.handleGetTelevisi} />\n                    tambahTelevisi={this.getDatabyId}\n                    users={this.state.user ? this.state.user.email : null} />\n                )\n              })\n            }\n          </div>\n        </div>\n      )\n    }\n  }\n\nexport default Televisi;"]},"metadata":{},"sourceType":"module"}