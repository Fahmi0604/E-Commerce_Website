{"ast":null,"code":"var _jsxFileName = \"/Users/fahmifirmansyah/Documents/Semester 6/Pemrograman_Berbasis_Framework/UAS/televisi-app/src/component/login/Signup.jsx\";\nimport React, { Component } from 'react';\nimport firebase from 'firebase';\nimport firebaseConfig from '../../config';\nexport default class Signup extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onLoginGoogle = () => {\n      var provider = new firebase.auth.GoogleAuthProvider();\n      firebase.auth().signInWithPopup(provider).then(result => {\n        /** @type {firebase.auth.OAuthCredential} */\n        // var credential = result.credential;\n        // This gives you a Google Access Token. You can use it to access the Google API.\n        // var token = credential.accessToken;\n        // The signed-in user info.\n        // var user = result.user;\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    if (!firebase.apps.length) {\n      firebase.initializeApp(firebaseConfig);\n    } else {\n      firebase.app(); // if already initialized, use that one\n    }\n\n    this.state = {\n      user: {}\n    };\n  }\n\n  authListener() {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.setState({\n          user\n        });\n        console.log(\"User adalah : \" + user.email);\n      } else {\n        this.setState({\n          user: null\n        });\n      }\n    });\n  }\n\n  componentDidMount() {\n    this.authListener();\n  }\n\n  signup(e) {\n    e.preventDefault();\n    firebase.auth().createUserWithEmailAndPassword(this.state.email, this.state.password).then(u => {\n      console.log(u);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"signup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"column-signup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      id: \"title-signup-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }, \"Sign Up\"), /*#__PURE__*/React.createElement(\"p\", {\n      id: \"title-signup-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    }, \"Sign Up with\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn-login-g\",\n      onClick: this.onLoginGoogle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"https://www.freepnglogos.com/uploads/google-logo-png/google-logo-png-google-icon-logo-png-transparent-svg-vector-bie-supply-14.png\",\n      alt: \"logo\",\n      style: {\n        width: 25,\n        backgroundColor: \"white\",\n        padding: 4\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }\n    }), \"Masuk dengan Google\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"column-signup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, \"world\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/fahmifirmansyah/Documents/Semester 6/Pemrograman_Berbasis_Framework/UAS/televisi-app/src/component/login/Signup.jsx"],"names":["React","Component","firebase","firebaseConfig","Signup","constructor","props","onLoginGoogle","provider","auth","GoogleAuthProvider","signInWithPopup","then","result","catch","error","console","log","apps","length","initializeApp","app","state","user","authListener","onAuthStateChanged","setState","email","componentDidMount","signup","e","preventDefault","createUserWithEmailAndPassword","password","u","err","handleChange","target","name","value","render","width","backgroundColor","padding"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport firebase from 'firebase';\nimport firebaseConfig from '../../config';\n\nexport default class Signup extends Component {\n    constructor(props) {\n        super(props)\n\n        if (!firebase.apps.length) {\n            firebase.initializeApp(firebaseConfig);\n        } else {\n            firebase.app(); // if already initialized, use that one\n        }\n\n        this.state = {\n            user: {}\n        }\n    }\n\n    authListener() {\n        firebase.auth().onAuthStateChanged((user) => {\n            if (user) {\n                this.setState({\n                    user\n                })\n                console.log(\"User adalah : \" + user.email)\n            }\n            else {\n                this.setState({\n                    user: null\n                })\n            }\n        })\n    }\n\n    componentDidMount() {\n        this.authListener();\n    }\n\n    signup(e) {\n        e.preventDefault();\n        firebase.auth().createUserWithEmailAndPassword(this.state.email, this.state.password).then((u) => {\n            console.log(u)\n        }).catch((err) => {\n            console.log(err);\n        })\n    }\n\n    handleChange(e) {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    onLoginGoogle = () => {\n        var provider = new firebase.auth.GoogleAuthProvider();\n        firebase.auth()\n            .signInWithPopup(provider)\n            .then((result) => {\n                /** @type {firebase.auth.OAuthCredential} */\n                // var credential = result.credential;\n\n                // This gives you a Google Access Token. You can use it to access the Google API.\n                // var token = credential.accessToken;\n                // The signed-in user info.\n                // var user = result.user;\n\n            }).catch((error) => {\n                console.log(error)\n            });\n    }\n\n    render() {\n        return (\n            <div className=\"signup\">\n                <div className=\"column-signup\">\n                    <p id=\"title-signup-1\">Sign Up</p>\n                    <p id=\"title-signup-2\">Sign Up with</p>\n                    {/* <center><p style={{ marginTop: -30 }}>atau</p></center> */}\n\n                    <button className=\"btn-login-g\" onClick={this.onLoginGoogle} >\n                        <img src=\"https://www.freepnglogos.com/uploads/google-logo-png/google-logo-png-google-icon-logo-png-transparent-svg-vector-bie-supply-14.png\"\n                            alt=\"logo\" style={{ width: 25, backgroundColor: \"white\", padding: 4 }} />\n                     Masuk dengan Google\n                    </button>\n\n                </div>\n                <div className=\"column-signup\">\n                    world\n                </div>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}