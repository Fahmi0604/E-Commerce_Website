{"ast":null,"code":"var _jsxFileName = \"/Users/fahmifirmansyah/Documents/Semester 6/Pemrograman_Berbasis_Framework/UAS/televisi-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './redux/reducers/globalReducer'; //Store\n\nconst reduxStore = createStore(rootReducer);\n\nambilDataDariServerAPI = uid => {\n  // this.authListener();\n  // console.log(\"uid: \"+this.state.user.uid)\n  const userRef = firebase.database().ref('keranjang/' + this.state.user.uid);\n  userRef.once('value', snapshot => {\n    let newUserState = [];\n    snapshot.forEach(data => {\n      const dataVal = data.val();\n      newUserState.push({\n        id: data.key,\n        nama: dataVal.nama,\n        harga: dataVal.harga,\n        gambar: dataVal.gambar,\n        stok: dataVal.stok,\n        qty: dataVal.qty\n      });\n    });\n    this.setState({\n      listKeranjang: newUserState\n    }); // console.log(this.state);\n  });\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(React.StrictMode, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Provider, {\n  store: reduxStore,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 7\n  }\n}))), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/fahmifirmansyah/Documents/Semester 6/Pemrograman_Berbasis_Framework/UAS/televisi-app/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","createStore","Provider","rootReducer","reduxStore","ambilDataDariServerAPI","uid","userRef","firebase","database","ref","state","user","once","snapshot","newUserState","forEach","data","dataVal","val","push","id","key","nama","harga","gambar","stok","qty","setState","listKeranjang","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,WAAP,MAAwB,gCAAxB,C,CAEA;;AACA,MAAMC,UAAU,GAAGH,WAAW,CAACE,WAAD,CAA9B;;AAEAE,sBAAsB,GAAIC,GAAD,IAAS;AAChC;AACA;AACA,QAAMC,OAAO,GAAGC,QAAQ,CAACC,QAAT,GAAoBC,GAApB,CAAwB,eAAa,KAAKC,KAAL,CAAWC,IAAX,CAAgBN,GAArD,CAAhB;AACAC,EAAAA,OAAO,CAACM,IAAR,CAAa,OAAb,EAAuBC,QAAD,IAAc;AAClC,QAAIC,YAAY,GAAG,EAAnB;AACAD,IAAAA,QAAQ,CAACE,OAAT,CAAiBC,IAAI,IAAI;AACvB,YAAMC,OAAO,GAAGD,IAAI,CAACE,GAAL,EAAhB;AACAJ,MAAAA,YAAY,CAACK,IAAb,CAAkB;AAChBC,QAAAA,EAAE,EAAEJ,IAAI,CAACK,GADO;AAEhBC,QAAAA,IAAI,EAAEL,OAAO,CAACK,IAFE;AAGhBC,QAAAA,KAAK,EAAEN,OAAO,CAACM,KAHC;AAIhBC,QAAAA,MAAM,EAAEP,OAAO,CAACO,MAJA;AAKhBC,QAAAA,IAAI,EAAER,OAAO,CAACQ,IALE;AAMhBC,QAAAA,GAAG,EAAET,OAAO,CAACS;AANG,OAAlB;AAQD,KAVD;AAWA,SAAKC,QAAL,CAAc;AACZC,MAAAA,aAAa,EAAEd;AADH,KAAd,EAbkC,CAgBlC;AACD,GAjBD;AAkBD,CAtBD;;AAwBAjB,QAAQ,CAACgC,MAAT,eACE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAE1B,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,CADF,EAME2B,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANF,E,CASA;AACA;AACA;;AACAhC,aAAa,CAACiC,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport rootReducer from './redux/reducers/globalReducer'\n\n//Store\nconst reduxStore = createStore(rootReducer);\n\nambilDataDariServerAPI = (uid) => {\n  // this.authListener();\n  // console.log(\"uid: \"+this.state.user.uid)\n  const userRef = firebase.database().ref('keranjang/'+this.state.user.uid);\n  userRef.once('value', (snapshot) => {\n    let newUserState = [];\n    snapshot.forEach(data => {\n      const dataVal = data.val()\n      newUserState.push({\n        id: data.key,\n        nama: dataVal.nama,\n        harga: dataVal.harga,\n        gambar: dataVal.gambar,\n        stok: dataVal.stok,\n        qty: dataVal.qty\n      })\n    })\n    this.setState({\n      listKeranjang: newUserState\n    })\n    // console.log(this.state);\n  })\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={reduxStore}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}