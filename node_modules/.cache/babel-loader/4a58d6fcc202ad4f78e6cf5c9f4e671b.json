{"ast":null,"code":"var _jsxFileName = \"/Users/fahmifirmansyah/Documents/Semester 6/Pemrograman_Berbasis_Framework/UAS/televisi-app/src/component/keranjang/Keranjang.jsx\";\nimport React, { Component } from 'react';\nimport firebase from 'firebase';\nimport firebaseConfig from '../../config';\nimport PostKeranjang from './PostKeranjang';\nimport { connect } from 'react-redux'; // var coba = 0;\n\nclass Keranjang extends Component {\n  constructor(props) {\n    super(props);\n\n    this.ambilDataDariServerAPI = uid => {\n      // this.authListener();\n      // console.log(\"uid: \"+this.state.user.uid)\n      const userRef = firebase.database().ref('keranjang/' + this.state.user.uid);\n      userRef.once('value', snapshot => {\n        let newUserState = [];\n        snapshot.forEach(data => {\n          const dataVal = data.val();\n          newUserState.push({\n            id: data.key,\n            nama: dataVal.nama,\n            harga: dataVal.harga,\n            gambar: dataVal.gambar,\n            stok: dataVal.stok,\n            qty: dataVal.qty\n          });\n        });\n        this.setState({\n          listKeranjang: newUserState\n        }); // console.log(this.state);\n      });\n    };\n\n    this.handleHapusTelevisi = idProduk => {\n      const {\n        listKeranjang\n      } = this.state;\n      const newState = listKeranjang.filter(data => {\n        return data.id !== idProduk;\n      });\n      this.setState({ ...this.state,\n        listKeranjang: newState\n      }); // // firebase.database()\n      // //     .ref(\"keranjang/\"+this.state.user.uid+\"/\")\n      // //     .set(this.state.)\n\n      firebase.database().ref(\"keranjang/\" + this.state.user.uid + \"/\" + idProduk).remove();\n    };\n\n    this.handleUpdateTelevisi = idProduk => {\n      const {\n        listKeranjang\n      } = this.state;\n      const newState = listKeranjang.filter(data => {\n        return data.id !== idProduk;\n      });\n      this.setState({ ...this.state,\n        listKeranjang: newState\n      });\n      firebase.database().ref(\"keranjang/\" + this.state.user.uid + \"/\" + idProduk);\n    };\n\n    if (!firebase.apps.length) {\n      firebase.initializeApp(firebaseConfig);\n    } else {\n      firebase.app(); // if already initialized, use that one\n    }\n\n    this.state = {\n      listKeranjang: [],\n      user: {}\n    };\n    this.authListener();\n  }\n\n  authListener() {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.setState({\n          user\n        });\n        this.ambilDataDariServerAPI(user.uid);\n        console.log(\"User adalah : \" + user.email);\n      } else {\n        this.setState({\n          user: null\n        });\n      }\n    });\n  }\n\n  // simpanDataKeServerAPI = () => {\n  //     // \n  // }\n  // componentWillMount() {\n  //   this.authListener();\n  // }\n  componentDidMount() {\n    // this.authListener();\n    this.ambilDataDariServerAPI();\n  }\n\n  componentDidUpdate(prevProps, prevState) {// if(prevState !== this.state){\n    //     this.simpanDataKeServerAPI();\n    // }\n  }\n\n  render() {\n    console.log(this.state);\n    var no = 0;\n    var total = 0;\n    var totalQty = 0;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"post-televisi\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"center\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 25\n      }\n    }, \"Keranjang\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tgh\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      border: \"1\",\n      cellPadding: \"5\",\n      width: \"100%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 29\n      }\n    }, \"No\"), /*#__PURE__*/React.createElement(\"th\", {\n      align: \"left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 29\n      }\n    }, \"Nama\"), /*#__PURE__*/React.createElement(\"th\", {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 29\n      }\n    }, \"Gambar\"), /*#__PURE__*/React.createElement(\"th\", {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 29\n      }\n    }, \"Harga\"), /*#__PURE__*/React.createElement(\"th\", {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 29\n      }\n    }, \"Qty\"), /*#__PURE__*/React.createElement(\"th\", {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 29\n      }\n    }, \"Subtotal\"), /*#__PURE__*/React.createElement(\"th\", {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 29\n      }\n    }, \"Opsi\")), this.state.listKeranjang.map(televisi => {\n      no += 1;\n      total += televisi.harga * televisi.qty;\n      totalQty += televisi.qty;\n      this.props.handleKeranjang(totalQty);\n      return /*#__PURE__*/React.createElement(PostKeranjang, {\n        no: no,\n        key: televisi.id,\n        id: televisi.id,\n        nama: televisi.nama,\n        harga: televisi.harga,\n        gambar: televisi.gambar,\n        stok: televisi.stok,\n        qty: televisi.qty,\n        tambahTelevisi: this.handleGetTelevisi,\n        hapusTelevisi: this.handleHapusTelevisi,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 37\n        }\n      });\n    }), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      colSpan: \"6\",\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 29\n      }\n    }, \"Total : \"), /*#__PURE__*/React.createElement(\"td\", {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 29\n      }\n    }, total)))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    tOrder: state.totalOrder\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleKeranjang: cek => dispatch({\n      type: 'ADD_ORDER',\n      newValue: cek\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Keranjang);","map":{"version":3,"sources":["/Users/fahmifirmansyah/Documents/Semester 6/Pemrograman_Berbasis_Framework/UAS/televisi-app/src/component/keranjang/Keranjang.jsx"],"names":["React","Component","firebase","firebaseConfig","PostKeranjang","connect","Keranjang","constructor","props","ambilDataDariServerAPI","uid","userRef","database","ref","state","user","once","snapshot","newUserState","forEach","data","dataVal","val","push","id","key","nama","harga","gambar","stok","qty","setState","listKeranjang","handleHapusTelevisi","idProduk","newState","filter","remove","handleUpdateTelevisi","apps","length","initializeApp","app","authListener","auth","onAuthStateChanged","console","log","email","componentDidMount","componentDidUpdate","prevProps","prevState","render","no","total","totalQty","map","televisi","handleKeranjang","handleGetTelevisi","mapStateToProps","tOrder","totalOrder","mapDispatchToProps","dispatch","cek","type","newValue"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,cAAP,MAA2B,cAA3B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;;AAEA,MAAMC,SAAN,SAAwBL,SAAxB,CAAkC;AAE9BM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAqCnBC,sBArCmB,GAqCOC,GAAD,IAAS;AAC9B;AACA;AACA,YAAMC,OAAO,GAAGT,QAAQ,CAACU,QAAT,GAAoBC,GAApB,CAAwB,eAAe,KAAKC,KAAL,CAAWC,IAAX,CAAgBL,GAAvD,CAAhB;AACAC,MAAAA,OAAO,CAACK,IAAR,CAAa,OAAb,EAAuBC,QAAD,IAAc;AAChC,YAAIC,YAAY,GAAG,EAAnB;AACAD,QAAAA,QAAQ,CAACE,OAAT,CAAiBC,IAAI,IAAI;AACrB,gBAAMC,OAAO,GAAGD,IAAI,CAACE,GAAL,EAAhB;AACAJ,UAAAA,YAAY,CAACK,IAAb,CAAkB;AACdC,YAAAA,EAAE,EAAEJ,IAAI,CAACK,GADK;AAEdC,YAAAA,IAAI,EAAEL,OAAO,CAACK,IAFA;AAGdC,YAAAA,KAAK,EAAEN,OAAO,CAACM,KAHD;AAIdC,YAAAA,MAAM,EAAEP,OAAO,CAACO,MAJF;AAKdC,YAAAA,IAAI,EAAER,OAAO,CAACQ,IALA;AAMdC,YAAAA,GAAG,EAAET,OAAO,CAACS;AANC,WAAlB;AAQH,SAVD;AAWA,aAAKC,QAAL,CAAc;AACVC,UAAAA,aAAa,EAAEd;AADL,SAAd,EAbgC,CAgBhC;AACH,OAjBD;AAkBH,KA3DkB;;AAAA,SAgFnBe,mBAhFmB,GAgFIC,QAAD,IAAc;AAChC,YAAM;AAAEF,QAAAA;AAAF,UAAoB,KAAKlB,KAA/B;AACA,YAAMqB,QAAQ,GAAGH,aAAa,CAACI,MAAd,CAAqBhB,IAAI,IAAI;AAC1C,eAAOA,IAAI,CAACI,EAAL,KAAYU,QAAnB;AACH,OAFgB,CAAjB;AAGA,WAAKH,QAAL,CAAc,EACV,GAAG,KAAKjB,KADE;AAEVkB,QAAAA,aAAa,EAAEG;AAFL,OAAd,EALgC,CAUhC;AACA;AACA;;AACAjC,MAAAA,QAAQ,CAACU,QAAT,GAAoBC,GAApB,CAAwB,eAAa,KAAKC,KAAL,CAAWC,IAAX,CAAgBL,GAA7B,GAAiC,GAAjC,GAAqCwB,QAA7D,EAAuEG,MAAvE;AACH,KA9FkB;;AAAA,SAgGnBC,oBAhGmB,GAgGKJ,QAAD,IAAc;AACjC,YAAM;AAAEF,QAAAA;AAAF,UAAoB,KAAKlB,KAA/B;AACA,YAAMqB,QAAQ,GAAGH,aAAa,CAACI,MAAd,CAAqBhB,IAAI,IAAI;AAC1C,eAAOA,IAAI,CAACI,EAAL,KAAYU,QAAnB;AACH,OAFgB,CAAjB;AAGA,WAAKH,QAAL,CAAc,EACV,GAAG,KAAKjB,KADE;AAEVkB,QAAAA,aAAa,EAAEG;AAFL,OAAd;AAKAjC,MAAAA,QAAQ,CAACU,QAAT,GAAoBC,GAApB,CAAwB,eAAa,KAAKC,KAAL,CAAWC,IAAX,CAAgBL,GAA7B,GAAiC,GAAjC,GAAqCwB,QAA7D;AACH,KA3GkB;;AAGf,QAAI,CAAChC,QAAQ,CAACqC,IAAT,CAAcC,MAAnB,EAA2B;AACvBtC,MAAAA,QAAQ,CAACuC,aAAT,CAAuBtC,cAAvB;AACH,KAFD,MAEO;AACHD,MAAAA,QAAQ,CAACwC,GAAT,GADG,CACa;AACnB;;AAED,SAAK5B,KAAL,GAAa;AACTkB,MAAAA,aAAa,EAAE,EADN;AAETjB,MAAAA,IAAI,EAAE;AAFG,KAAb;AAKA,SAAK4B,YAAL;AAEH;;AAEDA,EAAAA,YAAY,GAAG;AACXzC,IAAAA,QAAQ,CAAC0C,IAAT,GAAgBC,kBAAhB,CAAoC9B,IAAD,IAAU;AACzC,UAAIA,IAAJ,EAAU;AACN,aAAKgB,QAAL,CAAc;AACVhB,UAAAA;AADU,SAAd;AAIA,aAAKN,sBAAL,CAA4BM,IAAI,CAACL,GAAjC;AAEAoC,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAmBhC,IAAI,CAACiC,KAApC;AACH,OARD,MASK;AACD,aAAKjB,QAAL,CAAc;AACVhB,UAAAA,IAAI,EAAE;AADI,SAAd;AAGH;AACJ,KAfD;AAgBH;;AA0BD;AACA;AACA;AAEA;AACA;AACA;AAEAkC,EAAAA,iBAAiB,GAAG;AAChB;AACA,SAAKxC,sBAAL;AACH;;AAEDyC,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB,CACrC;AACA;AACA;AACH;;AA+BDC,EAAAA,MAAM,GAAG;AACLP,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKjC,KAAjB;AACA,QAAIwC,EAAE,GAAG,CAAT;AACA,QAAIC,KAAK,GAAG,CAAZ;AACA,QAAIC,QAAQ,GAAG,CAAf;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAR,CALJ,eAMI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,MAAM,EAAC,GAAd;AAAkB,MAAA,WAAW,EAAC,GAA9B;AAAkC,MAAA,KAAK,EAAC,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,KAAK,EAAC,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI;AAAI,MAAA,KAAK,EAAC,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAI,MAAA,KAAK,EAAC,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAI,MAAA,KAAK,EAAC,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALJ,eAMI;AAAI,MAAA,KAAK,EAAC,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aANJ,eAOI;AAAI,MAAA,KAAK,EAAC,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ,eAQI;AAAI,MAAA,KAAK,EAAC,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ,CADJ,EAYQ,KAAK1C,KAAL,CAAWkB,aAAX,CAAyByB,GAAzB,CAA6BC,QAAQ,IAAI;AACrCJ,MAAAA,EAAE,IAAI,CAAN;AACAC,MAAAA,KAAK,IAAIG,QAAQ,CAAC/B,KAAT,GAAiB+B,QAAQ,CAAC5B,GAAnC;AACA0B,MAAAA,QAAQ,IAAIE,QAAQ,CAAC5B,GAArB;AACA,WAAKtB,KAAL,CAAWmD,eAAX,CAA2BH,QAA3B;AACA,0BACI,oBAAC,aAAD;AACI,QAAA,EAAE,EAAEF,EADR;AAEI,QAAA,GAAG,EAAEI,QAAQ,CAAClC,EAFlB;AAGI,QAAA,EAAE,EAAEkC,QAAQ,CAAClC,EAHjB;AAII,QAAA,IAAI,EAAEkC,QAAQ,CAAChC,IAJnB;AAKI,QAAA,KAAK,EAAEgC,QAAQ,CAAC/B,KALpB;AAMI,QAAA,MAAM,EAAE+B,QAAQ,CAAC9B,MANrB;AAOI,QAAA,IAAI,EAAE8B,QAAQ,CAAC7B,IAPnB;AAQI,QAAA,GAAG,EAAE6B,QAAQ,CAAC5B,GARlB;AASI,QAAA,cAAc,EAAE,KAAK8B,iBATzB;AAUI,QAAA,aAAa,EAAE,KAAK3B,mBAVxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAaH,KAlBD,CAZR,eAiCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,OAAO,EAAC,GAAZ;AAAgB,MAAA,KAAK,EAAC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAI,MAAA,KAAK,EAAC,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoBsB,KAApB,CAFJ,CAjCJ,CADJ,CANJ,CADJ;AAiDH;;AArK6B;;AAwKlC,MAAMM,eAAe,GAAI/C,KAAD,IAAW;AAC/B,SAAO;AACLgD,IAAAA,MAAM,EAAEhD,KAAK,CAACiD;AADT,GAAP;AAGD,CAJH;;AAME,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLN,IAAAA,eAAe,EAAGO,GAAD,IAASD,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAE,WAAP;AAAoBC,MAAAA,QAAQ,EAAEF;AAA9B,KAAD;AAD7B,GAAP;AAGD,CAJD;;AAMF,eAAe7D,OAAO,CAACwD,eAAD,EAAkBG,kBAAlB,CAAP,CAA6C1D,SAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport firebase from 'firebase'\nimport firebaseConfig from '../../config'\nimport PostKeranjang from './PostKeranjang'\nimport { connect } from 'react-redux'\n\n// var coba = 0;\n\nclass Keranjang extends Component {\n\n    constructor(props) {\n        super(props);\n\n        if (!firebase.apps.length) {\n            firebase.initializeApp(firebaseConfig);\n        } else {\n            firebase.app(); // if already initialized, use that one\n        }\n\n        this.state = {\n            listKeranjang: [],\n            user: {}\n        }\n\n        this.authListener();\n\n    }\n\n    authListener() {\n        firebase.auth().onAuthStateChanged((user) => {\n            if (user) {\n                this.setState({\n                    user\n                })\n\n                this.ambilDataDariServerAPI(user.uid);\n\n                console.log(\"User adalah : \" + user.email)\n            }\n            else {\n                this.setState({\n                    user: null\n                })\n            }\n        })\n    }\n\n    ambilDataDariServerAPI = (uid) => {\n        // this.authListener();\n        // console.log(\"uid: \"+this.state.user.uid)\n        const userRef = firebase.database().ref('keranjang/' + this.state.user.uid);\n        userRef.once('value', (snapshot) => {\n            let newUserState = [];\n            snapshot.forEach(data => {\n                const dataVal = data.val()\n                newUserState.push({\n                    id: data.key,\n                    nama: dataVal.nama,\n                    harga: dataVal.harga,\n                    gambar: dataVal.gambar,\n                    stok: dataVal.stok,\n                    qty: dataVal.qty\n                })\n            })\n            this.setState({\n                listKeranjang: newUserState\n            })\n            // console.log(this.state);\n        })\n    }\n\n    // simpanDataKeServerAPI = () => {\n    //     // \n    // }\n\n    // componentWillMount() {\n    //   this.authListener();\n    // }\n\n    componentDidMount() {\n        // this.authListener();\n        this.ambilDataDariServerAPI();\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        // if(prevState !== this.state){\n        //     this.simpanDataKeServerAPI();\n        // }\n    }\n\n    handleHapusTelevisi = (idProduk) => {\n        const { listKeranjang } = this.state;\n        const newState = listKeranjang.filter(data => {\n            return data.id !== idProduk;\n        })\n        this.setState({\n            ...this.state,\n            listKeranjang: newState\n        })\n\n        // // firebase.database()\n        // //     .ref(\"keranjang/\"+this.state.user.uid+\"/\")\n        // //     .set(this.state.)\n        firebase.database().ref(\"keranjang/\"+this.state.user.uid+\"/\"+idProduk).remove();\n    }\n\n    handleUpdateTelevisi = (idProduk) => {\n        const { listKeranjang } = this.state;\n        const newState = listKeranjang.filter(data => {\n            return data.id !== idProduk;\n        })\n        this.setState({\n            ...this.state,\n            listKeranjang: newState\n        })\n\n        firebase.database().ref(\"keranjang/\"+this.state.user.uid+\"/\"+idProduk)\n    }\n\n    render() {\n        console.log(this.state);\n        var no = 0;\n        var total = 0;\n        var totalQty = 0;\n        return (\n            <div className=\"post-televisi\">\n                {\n                  /* <div className=\"form pb-2 border-bottom\">\n                      <button type=\"submit\" className=\"btn btn-primary\" onClick={this.handleTombolSimpan}>Simpan</button>\n                  </div> */}\n                <center><h2>Keranjang</h2></center>\n                <div className=\"tgh\">\n                    <table border=\"1\" cellPadding=\"5\" width=\"100%\">\n                        <tr>\n                            <th align=\"center\">No</th>\n                            {/* <th align=\"center\">ID Produk</th> */}\n                            <th align=\"left\">Nama</th>\n                            <th align=\"center\">Gambar</th>\n                            <th align=\"center\">Harga</th>\n                            <th align=\"center\">Qty</th>\n                            <th align=\"center\">Subtotal</th>\n                            <th align=\"center\">Opsi</th>\n                        </tr>\n                        {\n                            this.state.listKeranjang.map(televisi => {\n                                no += 1;\n                                total += televisi.harga * televisi.qty\n                                totalQty += televisi.qty\n                                this.props.handleKeranjang(totalQty)\n                                return (\n                                    <PostKeranjang\n                                        no={no}\n                                        key={televisi.id}\n                                        id={televisi.id}\n                                        nama={televisi.nama}\n                                        harga={televisi.harga}\n                                        gambar={televisi.gambar}\n                                        stok={televisi.stok}\n                                        qty={televisi.qty}\n                                        tambahTelevisi={this.handleGetTelevisi} \n                                        hapusTelevisi={this.handleHapusTelevisi} />\n                                )\n                            })\n                        }\n                        {/* {this.props.handleKeranjang()} */}\n                        <tr>\n                            <td colSpan=\"6\" align=\"right\">Total : </td>\n                            <td align=\"center\">{total}</td>\n                        </tr>\n                    </table>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n      tOrder: state.totalOrder\n    }\n  }\n  \n  const mapDispatchToProps = (dispatch) => {\n    return {\n      handleKeranjang: (cek) => dispatch({type: 'ADD_ORDER', newValue: cek})\n    }\n  }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Keranjang);"]},"metadata":{},"sourceType":"module"}